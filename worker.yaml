---
- name: Configure and Install the Leader Node
  hosts: worker
  become: yes

  tasks:
    - name: Ensure the server is up to date
      ansible.builtin.yum:
        state: latest
        name: '*'
    - name: Validate the architecture of the Linux Box
      ansible.builtin.command:
        cmd: uname -a
      register: cribl_arch 
    - name: Install the lastest version of Cribl arm64
      ansible.builtin.unarchive:
        src: "{{ lookup('ansible.builtin.url', 'https://cdn.cribl.io/dl/latest-arm64') }}"
        dest: /opt
        remote_src: yes
        exclude: ['._*']
      when: '"aarch64" in cribl_arch.stdout'
    - name: Install the lastest version of Cribl x86_64
      ansible.builtin.unarchive:
        src: "{{ lookup('ansible.builtin.url', 'https://cdn.cribl.io/dl/latest-x64') }}"
        dest: /opt
        remote_src: yes
        exclude: ['._*']
      when: '"x86_64" in cribl_arch.stdout'
    - name: Create the Cribl User
      ansible.builtin.user:
        name: cribl
        home: /opt/cribl
    - name: Configure the the node as a Cribl Worker.
      ansible.builtin.command:
        cmd: '/opt/cribl/bin/cribl mode-worker -H {{leaderhost}} -p {{leaderport}} -u {{leaderauth}} -g {{workergroup}}'
    - name: Set ownership of the cribl environment to the cribl user
      ansible.builtin.file:
        path: /opt/cribl
        owner: cribl
        group: cribl
        recurse: yes
        state: directory
    - name: Test to see if the systemd service has already been configured.
      ansible.builtin.stat:
        path: /etc/systemd/system/cribl.service
      register: cribl_systemd
    - name: Install the systemd service
      ansible.builtin.command:
        cmd: /opt/cribl/bin/cribl boot-start enable -u cribl
      when: not cribl_systemd.stat.exists
    - name: Enable the Cribl service on reboot
      ansible.builtin.service:
        name: cribl
        state: restarted
        enabled: yes
...
